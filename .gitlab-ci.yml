stages:
  - Test
  - Release

flake8:
  stage: Test
  image: python:3.11-slim
  before_script:
    - python -V
    - python -m pip install flake8
  script:
    - flake8 src --exit-zero | tee flake8_report.txt
  artifacts:
    when: always
    paths:
      - flake8_report.txt

pylint:
  stage: Test
  image: python:3.11-slim
  before_script:
    - python -V
    - python -m pip install -r requirements.txt
    - python -m pip install pylint
  script:
    - pylint --fail-under=3 src | tee pylint_report.txt
  artifacts:
    when: always
    paths:
      - pylint_report.txt

pytest:
  stage: Test
  image: python:3.11-slim
  before_script:
    - pip3 install -r requirements.txt
    - pip3 install -r requirements.test.txt
  script:
    - pytest --junitxml=test-results.xml -vv
  artifacts:
    when: on_failure
    paths:
      - pytest_report.xml

release-image:
  stage: Release
  image: docker:24.0.2
  services:
    - docker:24.0.2-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHA" -f docker/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHA"
